{"version":3,"file":"component---src-templates-blog-post-js-e36d82678deaf327b18f.js","mappings":"iKAkDA,IAtCY,WACV,IAeA,GAfaA,EAAAA,EAAAA,gBAAe,cAeIC,KAAKC,aAA7BC,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,OAChB,OACE,uBACEC,MAAO,CACLC,cAAcC,EAAAA,EAAAA,IAAO,OAGvB,uCACa,8BAASJ,EAAOK,MAD7B,8IAIE,qBACEH,MAAO,CAAEI,UAAU,QAAUC,QAAQ,SACrCC,KAAI,+BAAiCP,EAAOQ,UAF9C,oCASP,C,iIC8BYC,EAAO,SAAC,GAAwC,IAAdC,EAAa,EAArCC,KAAQC,eAC7B,OACE,gBAAC,IAAD,CACEC,MAAOH,EAAKI,YAAYD,MACxBE,YAAaL,EAAKI,YAAYC,aAAeL,EAAKM,SAGvD,EAED,UA/EyB,SAAC,GAGnB,IAAD,IAFJL,KAAQM,EAEJ,EAFIA,SAAUC,EAEd,EAFcA,KAAMrB,EAEpB,EAFoBA,KAAsBa,EAE1C,EAF0BE,eAC9BO,EACI,EADJA,SAEMC,EAAYvB,EAAKC,aAAae,MAEpC,OACE,gBAAC,IAAD,CAAQM,SAAUA,EAAUN,MAAOO,GACjC,+BACE,8BACE,sBACEnB,MAAO,CACLoB,WAAWlB,EAAAA,EAAAA,IAAO,GAClBD,aAAc,IAGfQ,EAAKI,YAAYD,OAEpB,qBACEZ,MAAK,kBACAqB,EAAAA,EAAAA,KAAM,IADN,CAEHhB,QAAQ,QACRJ,cAAcC,EAAAA,EAAAA,IAAO,MAGtBO,EAAKI,YAAYS,KAPpB,MAO6Bb,EAAKc,OAAOC,YAAYC,OAGvD,2BAASC,wBAAyB,CAAEC,OAAQlB,EAAKmB,QACjD,sBACE5B,MAAO,CACLC,cAAcC,EAAAA,EAAAA,IAAO,MAGzB,8BACE,gBAAC,IAAD,QAIJ,2BACE,sBACEF,MAAO,CACLK,QAAQ,OACRwB,SAAS,OACTC,eAAe,gBACfC,UAAU,OACVC,QAAS,EACTC,WAAY,IAGd,0BACGjB,GACC,gBAAC,EAAAkB,KAAD,CAAMC,GAAInB,EAASO,OAAOa,KAAMC,IAAI,QAApC,KACKrB,EAASH,YAAYD,QAI9B,0BACGK,GACC,gBAAC,EAAAiB,KAAD,CAAMC,GAAIlB,EAAKM,OAAOa,KAAMC,IAAI,QAC7BpB,EAAKJ,YAAYD,MADpB,SASb,C","sources":["webpack://gatsby-starter-blog/./src/components/bio.js","webpack://gatsby-starter-blog/./src/templates/blog-post.js"],"sourcesContent":["/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport { graphql, useStaticQuery } from \"gatsby\"\nimport React from \"react\"\n\nimport { rhythm } from \"../utils/typography\"\n\nconst Bio = () => {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      site {\n        siteMetadata {\n          author {\n            name\n          }\n          social {\n            linkedIn\n          }\n        }\n      }\n    }\n  `)\n\n  const { author, social } = data.site.siteMetadata\n  return (\n    <div\n      style={{\n        marginBottom: rhythm(2.5),\n      }}\n    >\n      <p>\n        Written by <strong>{author.name}</strong>. A proactive and disciplined\n        Sr. Software Engineer (Full-stack Web Developer) with rock-solid\n        programming skills in Javascript/Typescript.\n        <a\n          style={{ textAlign: `right`, display: `block` }}\n          href={`https://www.linkedin.com/in/${social.linkedIn}`}\n        >\n          Read more about me on LinkedIn.\n        </a>\n      </p>\n    </div>\n  )\n}\n\nexport default Bio\n","import { graphql, Link } from \"gatsby\"\nimport React from \"react\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\nimport { rhythm, scale } from \"../utils/typography\"\n\nconst BlogPostTemplate = ({\n  data: { previous, next, site, markdownRemark: post },\n  location,\n}) => {\n  const siteTitle = site.siteMetadata.title\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <article>\n        <header>\n          <h1\n            style={{\n              marginTop: rhythm(1),\n              marginBottom: 0,\n            }}\n          >\n            {post.frontmatter.title}\n          </h1>\n          <p\n            style={{\n              ...scale(-1 / 5),\n              display: `block`,\n              marginBottom: rhythm(1),\n            }}\n          >\n            {post.frontmatter.date} - {post.fields.readingTime.text}\n          </p>\n        </header>\n        <section dangerouslySetInnerHTML={{ __html: post.html }} />\n        <hr\n          style={{\n            marginBottom: rhythm(1),\n          }}\n        />\n        <footer>\n          <Bio />\n        </footer>\n      </article>\n\n      <nav>\n        <ul\n          style={{\n            display: `flex`,\n            flexWrap: `wrap`,\n            justifyContent: `space-between`,\n            listStyle: `none`,\n            padding: 0,\n            marginLeft: 0,\n          }}\n        >\n          <li>\n            {previous && (\n              <Link to={previous.fields.slug} rel=\"prev\">\n                ← {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} →\n              </Link>\n            )}\n          </li>\n        </ul>\n      </nav>\n    </Layout>\n  )\n}\n\nexport const Head = ({ data: { markdownRemark: post } }) => {\n  return (\n    <Seo\n      title={post.frontmatter.title}\n      description={post.frontmatter.description || post.excerpt}\n    />\n  )\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug(\n    $id: String!\n    $previousPostId: String\n    $nextPostId: String\n  ) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(id: { eq: $id }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n      }\n      fields {\n        readingTime {\n          text\n        }\n      }\n    }\n    previous: markdownRemark(id: { eq: $previousPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n    next: markdownRemark(id: { eq: $nextPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n  }\n`\n"],"names":["useStaticQuery","site","siteMetadata","author","social","style","marginBottom","rhythm","name","textAlign","display","href","linkedIn","Head","post","data","markdownRemark","title","frontmatter","description","excerpt","previous","next","location","siteTitle","marginTop","scale","date","fields","readingTime","text","dangerouslySetInnerHTML","__html","html","flexWrap","justifyContent","listStyle","padding","marginLeft","Link","to","slug","rel"],"sourceRoot":""}