{"componentChunkName":"component---src-templates-blog-post-js","path":"/angular-material-reusable-autocomplete/","result":{"data":{"site":{"siteMetadata":{"title":"WhateverJS Blog"}},"markdownRemark":{"id":"4b34e70f-6fd7-535f-83c7-a2f0c824ce73","excerpt":"In this example I want to show you how to implement the  interface from  package in order to build a reusable Form Control. Before starting I will ask you to…","html":"<p>In this example I want to show you how to implement the <code class=\"language-text\">ControlValueAccessor</code> interface from <strong><em><code class=\"language-text\">@angular/forms</code></em></strong> package in order to build a reusable Form Control.</p>\n<p>Before starting I will ask you to open the following link > <a href=\"https://stackblitz.com/edit/angular-sbcm7h-oibfvx\">Stackblitz - Reusable Angular Material Input Autocomplete form control</a> where you will find the working example. Along this post I will describe briefly the approach I took and my reasoning about some decisions.</p>\n<h2>User Story</h2>\n<p>As User I want to be able to search X product by its name and select it.</p>\n<h4>Conditions:</h4>\n<ol>\n<li>When: I type 3 or more characters matching the product’s name I want to see a list of options to select one of them.</li>\n<li>When: The search is being carried out I want know it.</li>\n<li>When: The search has no results I want to know it.</li>\n</ol>\n<h2>Developer’s decisions</h2>\n<ol>\n<li>Each option must have an Identifier (with that value I will know when a provided option was selected) and a label/text (which will replace the written text by the user after selecting an option).</li>\n<li>The form control must not know how to perform the options’ search. I would like to use the same component to search for Y, Z or W product (being Y, Z and W of different categories). The input’s placeholder and the number of characters to trigger the search action must be configurable.</li>\n<li>Since I pretend to use this component to execute other searches I will make the minimum characters’ length to trigger the search a component parameter.</li>\n</ol>\n<h2>Prerequisites</h2>\n<ol>\n<li>An Angular project v8+ with <a href=\"https://material.angular.io/guide/getting-started#install-angular-material\">Angular Material installed</a>.</li>\n<li>Knowledge on how to use <a href=\"https://angular.io/guide/reactive-forms\">Angular Reactive Forms</a>.</li>\n<li>Knowledge about the <code class=\"language-text\">ControlValueAccessor</code> interface. What is its purpose? In case you do not know about this here is a good video where <a href=\"https://twitter.com/karaforthewin\">@karaforthewin</a> explains advance topics on Angular Forms and 2 different approaches to implement the interface. Also you can find some other examples (I found most of them use the approach of providing <code class=\"language-text\">NG_VALUE_ACCESSOR</code>, here I do not).</li>\n</ol>\n<h2>Let’s Do It</h2>\n<p>I will create an Angular Module to export the component. Since I want to use it in other places this will give some portability. Remember this module will require to have installed Angular Material.</p>\n<p>Let’s scaffold a component using <code class=\"language-text\">angular-cli</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">ng generate component input-autocomplete</code></pre></div>\n<p>To build the component you will need to import into your Angular Module the following modules: <code class=\"language-text\">ReactiveFormsModule</code>, <code class=\"language-text\">MatInputModule</code>, <code class=\"language-text\">MatAutocompleteModule</code>, <code class=\"language-text\">MatOptionModule</code>, <code class=\"language-text\">MatIconModule</code>.</p>\n<h4>Component’s module</h4>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre style=\"counter-reset: linenumber 0\" class=\"language-javascript line-numbers\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> CommonModule <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@angular/common\"</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> NgModule <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@angular/core\"</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> ReactiveFormsModule <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@angular/forms\"</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>\n  MatAutocompleteModule<span class=\"token punctuation\">,</span>\n  MatIconModule<span class=\"token punctuation\">,</span>\n  MatInputModule<span class=\"token punctuation\">,</span>\n  MatOptionModule<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@angular/material\"</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> InputAutocompleteComponent <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"./input-autocomplete.component\"</span>\n\n@<span class=\"token function\">NgModule</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  declarations<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>InputAutocompleteComponent<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  imports<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n    CommonModule<span class=\"token punctuation\">,</span>\n    ReactiveFormsModule<span class=\"token punctuation\">,</span>\n    MatInputModule<span class=\"token punctuation\">,</span>\n    MatAutocompleteModule<span class=\"token punctuation\">,</span>\n    MatOptionModule<span class=\"token punctuation\">,</span>\n    MatIconModule<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  exports<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>InputAutocompleteComponent<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">InputAutocompleteModule</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<blockquote>\n<p>Now, let’s work in the component.</p>\n</blockquote>\n<h4>Template:</h4>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre style=\"counter-reset: linenumber 0\" class=\"language-html line-numbers\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>mat-form-field</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span>\n    <span class=\"token attr-name\">matInput</span>\n    <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span>\n    <span class=\"token attr-name\">[matAutocomplete]</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>auto<span class=\"token punctuation\">\"</span></span>\n    <span class=\"token attr-name\">matAutocompletePosition</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>below<span class=\"token punctuation\">\"</span></span>\n    <span class=\"token attr-name\">[formControl]</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>inputControl<span class=\"token punctuation\">\"</span></span>\n    <span class=\"token attr-name\">[placeholder]</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>placeholder<span class=\"token punctuation\">\"</span></span>\n    <span class=\"token attr-name\">required</span>\n    <span class=\"token attr-name\">(blur)</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>onTouched()<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token punctuation\">/></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>mat-icon</span> <span class=\"token attr-name\">matSuffix</span><span class=\"token punctuation\">></span></span>search<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>mat-icon</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>mat-error</span> <span class=\"token attr-name\">*ngIf</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>!inputControl.valid &amp;&amp; inputControl.errors?.required<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    This field is required\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>mat-error</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>mat-form-field</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>mat-autocomplete</span>\n  <span class=\"token attr-name\">#auto</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>matAutocomplete<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token attr-name\">autoActiveFirstOption</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>true<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token attr-name\">[displayWith]</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>displayFn<span class=\"token punctuation\">\"</span></span>\n<span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>mat-option</span> <span class=\"token attr-name\">*ngIf</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>isSearching; else optionsTemplate<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">disabled</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>true<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>em</span><span class=\"token punctuation\">></span></span>Searching...<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>em</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>mat-option</span><span class=\"token punctuation\">></span></span>\n\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ng-template</span> <span class=\"token attr-name\">#optionsTemplate</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>mat-option</span>\n      <span class=\"token attr-name\">*ngFor</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>let option of options<span class=\"token punctuation\">\"</span></span>\n      <span class=\"token attr-name\">[value]</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>option<span class=\"token punctuation\">\"</span></span>\n      <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>provided<span class=\"token punctuation\">\"</span></span>\n    <span class=\"token punctuation\">></span></span>\n      {{ option.label }}\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>mat-option</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ng-template</span><span class=\"token punctuation\">></span></span>\n\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>mat-option</span> <span class=\"token attr-name\">*ngIf</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>!isSearching &amp;&amp; noResults<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">disabled</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>true<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>b</span><span class=\"token punctuation\">></span></span>No results found<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>b</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>mat-option</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>mat-autocomplete</span><span class=\"token punctuation\">></span></span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>Basically the template uses:</p>\n<ul>\n<li>A <code class=\"language-text\">MatFormField</code> with a <code class=\"language-text\">MatInput</code> type text, and a <code class=\"language-text\">MatAutocomplete</code> as is described in the <a href=\"https://material.angular.io/components/autocomplete/overview#simple-autocomplete\">component’s guide</a>.</li>\n<li>\n<p>It uses 3 <code class=\"language-text\">MatOption</code> elements inside the <code class=\"language-text\">MatAutocomplete</code>:</p>\n<ul>\n<li>The 1st <code class=\"language-text\">MatOption</code> is to display a message while the search is running.</li>\n<li>The 2nd <code class=\"language-text\">MatOption</code> has a <code class=\"language-text\">*ngFor</code> directive and works IF results are found.</li>\n<li>The last <code class=\"language-text\">MatOption</code> is to display a message when no results are found.</li>\n</ul>\n</li>\n</ul>\n<h4>Controller</h4>\n<div class=\"gatsby-highlight has-highlighted-lines\" data-language=\"javascript\"><pre style=\"counter-reset: linenumber 0\" class=\"language-javascript line-numbers\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>\n  ChangeDetectionStrategy<span class=\"token punctuation\">,</span>\n  ChangeDetectorRef<span class=\"token punctuation\">,</span>\n  Component<span class=\"token punctuation\">,</span>\n  Input<span class=\"token punctuation\">,</span>\n  OnChanges<span class=\"token punctuation\">,</span>\n  OnInit<span class=\"token punctuation\">,</span>\n  Optional<span class=\"token punctuation\">,</span>\n  Self<span class=\"token punctuation\">,</span>\n  SimpleChanges<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@angular/core'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>\n  AbstractControl<span class=\"token punctuation\">,</span>\n  ControlValueAccessor<span class=\"token punctuation\">,</span>\n  FormControl<span class=\"token punctuation\">,</span>\n  NgControl<span class=\"token punctuation\">,</span>\n  ValidationErrors<span class=\"token punctuation\">,</span>\n  ValidatorFn<span class=\"token punctuation\">,</span>\n  Validators<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@angular/forms'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> coerceNumberProperty <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@angular/cdk/coercion'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Observable <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'rxjs'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> debounceTime <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'rxjs/operators'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">Identifiable</span> <span class=\"token punctuation\">{</span>\n  id<span class=\"token punctuation\">:</span> string <span class=\"token operator\">|</span> number<span class=\"token punctuation\">;</span>\n  label<span class=\"token punctuation\">:</span> string<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">/**\n * Validates if the value passed has a code in order to be declared as an\n * object provided by material autocomplete options\n */</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">isAutocompleteOption</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">value<span class=\"token punctuation\">:</span> Identifiable</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> boolean <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>value <span class=\"token operator\">||</span> <span class=\"token keyword\">typeof</span> value <span class=\"token operator\">===</span> <span class=\"token string\">'string'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> value<span class=\"token punctuation\">.</span>id <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">/**\n * Validates the control value to have an `id` attribute. It is expected\n * control value to be an object.\n */</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">containsIdValidation</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">control<span class=\"token punctuation\">:</span> AbstractControl</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> ValidationErrors <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token function\">isAutocompleteOption</span><span class=\"token punctuation\">(</span>control<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token keyword\">null</span> <span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> required<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n@<span class=\"token function\">Component</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  selector<span class=\"token punctuation\">:</span> <span class=\"token string\">'input-autocomplete'</span><span class=\"token punctuation\">,</span>\n  templateUrl<span class=\"token punctuation\">:</span> <span class=\"token string\">'./input-autocomplete.component.html'</span><span class=\"token punctuation\">,</span>\n  styleUrls<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'./input-autocomplete.component.css'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  changeDetection<span class=\"token punctuation\">:</span> ChangeDetectionStrategy<span class=\"token punctuation\">.</span>OnPush<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">InputAutocompleteComponent</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">implements</span> <span class=\"token class-name\">OnInit</span><span class=\"token punctuation\">,</span> ControlValueAccessor<span class=\"token punctuation\">,</span> OnChanges <span class=\"token punctuation\">{</span></span>  @<span class=\"token function\">Input</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> placeholder<span class=\"token punctuation\">:</span> string<span class=\"token punctuation\">;</span>\n  @<span class=\"token function\">Input</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> options<span class=\"token punctuation\">:</span> Identifiable<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Inner form control to link input text changes to mat autocomplete</span>\n  inputControl <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">FormControl</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>validators<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  searchResults<span class=\"token punctuation\">:</span> Observable<span class=\"token operator\">&lt;</span>any<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n  noResults <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n  isSearching <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">private</span> _lengthToTriggerSearch <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span>\n\n  @<span class=\"token function\">Input</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">set</span> <span class=\"token function\">lengthToTriggerSearch</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">value<span class=\"token punctuation\">:</span> number</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_lengthToTriggerSearch <span class=\"token operator\">=</span> <span class=\"token function\">coerceNumberProperty</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token parameter\">@<span class=\"token function\">Optional</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> @<span class=\"token function\">Self</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">private</span> controlDir<span class=\"token punctuation\">:</span> NgControl<span class=\"token punctuation\">,</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">private</span> changeDetectorRef<span class=\"token punctuation\">:</span> ChangeDetectorRef<span class=\"token punctuation\">,</span></span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>controlDir<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>controlDir<span class=\"token punctuation\">.</span>valueAccessor <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">ngOnInit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>controlDir<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// Set validators for the outer ngControl equals to the inner</span>\n      <span class=\"token keyword\">const</span> control <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>controlDir<span class=\"token punctuation\">.</span>control<span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">const</span> validators <span class=\"token operator\">=</span> control<span class=\"token punctuation\">.</span>validator\n        <span class=\"token operator\">?</span> <span class=\"token punctuation\">[</span>control<span class=\"token punctuation\">.</span>validator<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>inputControl<span class=\"token punctuation\">.</span>validator<span class=\"token punctuation\">]</span>\n        <span class=\"token punctuation\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>inputControl<span class=\"token punctuation\">.</span>validator<span class=\"token punctuation\">;</span>\n      control<span class=\"token punctuation\">.</span><span class=\"token function\">setValidators</span><span class=\"token punctuation\">(</span>validators<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token comment\">// Update outer ngControl status</span>\n      control<span class=\"token punctuation\">.</span><span class=\"token function\">updateValueAndValidity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> emitEvent<span class=\"token punctuation\">:</span> <span class=\"token boolean\">false</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token function\">ngOnChanges</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">changes<span class=\"token punctuation\">:</span> SimpleChanges</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>changes<span class=\"token punctuation\">.</span>options<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>isSearching<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>isSearching <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\"></span><span class=\"gatsby-highlight-code-line\">        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>changes<span class=\"token punctuation\">.</span>options<span class=\"token punctuation\">.</span>firstChange <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>changes<span class=\"token punctuation\">.</span>options<span class=\"token punctuation\">.</span>currentValue<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">          <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>noResults <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">          <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>noResults <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">        <span class=\"token punctuation\">}</span></span><span class=\"gatsby-highlight-code-line\">      <span class=\"token punctuation\">}</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token punctuation\">}</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span></span>\n  <span class=\"token comment\">/**\n   * Allows Angular to update the inputControl.\n   * Update the model and changes needed for the view here.\n   */</span>\n  <span class=\"token function\">writeValue</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">:</span> any<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">{</span>\n    obj <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>inputControl<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">/**\n   * Allows Angular to register a function to call when the inputControl changes.\n   */</span>\n  <span class=\"token function\">registerOnChange</span><span class=\"token punctuation\">(</span>fn<span class=\"token punctuation\">:</span> any<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Pass the value to the outer ngControl if it has an id otherwise pass null</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>inputControl<span class=\"token punctuation\">.</span>valueChanges<span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span><span class=\"token function\">debounceTime</span><span class=\"token punctuation\">(</span><span class=\"token number\">300</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">subscribe</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">      <span class=\"token function-variable function\">next</span><span class=\"token punctuation\">:</span> <span class=\"token parameter\">value</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> value <span class=\"token operator\">===</span> <span class=\"token string\">'string'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">          <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">isMinLength</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>isSearching <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">            <span class=\"token comment\">/**</span><span class=\"gatsby-highlight-code-line\">             * Fire change detection to display the searching status option</span><span class=\"gatsby-highlight-code-line\">             */</span></span><span class=\"gatsby-highlight-code-line\">            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>changeDetectorRef<span class=\"token punctuation\">.</span><span class=\"token function\">detectChanges</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">            <span class=\"token function\">fn</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">.</span><span class=\"token function\">toUpperCase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">          <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>isSearching <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>noResults <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\"></span><span class=\"gatsby-highlight-code-line\">            <span class=\"token function\">fn</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">          <span class=\"token punctuation\">}</span></span><span class=\"gatsby-highlight-code-line\">        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">          <span class=\"token function\">fn</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">        <span class=\"token punctuation\">}</span></span><span class=\"gatsby-highlight-code-line\">      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">/**\n   * Allows Angular to register a function to call when the input has been touched.\n   * Save the function as a property to call later here.\n   */</span>\n  <span class=\"token function\">registerOnTouched</span><span class=\"token punctuation\">(</span>fn<span class=\"token punctuation\">:</span> any<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>onTouched <span class=\"token operator\">=</span> fn<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">/**\n   * Allows Angular to disable the input.\n   */</span>\n  setDisabledState<span class=\"token operator\">?</span><span class=\"token punctuation\">(</span>isDisabled<span class=\"token punctuation\">:</span> boolean<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">{</span>\n    isDisabled <span class=\"token operator\">?</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>inputControl<span class=\"token punctuation\">.</span><span class=\"token function\">disable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>inputControl<span class=\"token punctuation\">.</span><span class=\"token function\">enable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">/**\n   * Function to call when the input is touched.\n   */</span>\n  <span class=\"token function\">onTouched</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">/**\n   * Method linked to the mat-autocomplete `[displayWith]` input.\n   * This is how result name is printed in the input box.\n   */</span>\n  <span class=\"token function\">displayFn</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">:</span> Identifiable<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> string <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> result <span class=\"token operator\">?</span> result<span class=\"token punctuation\">.</span>label <span class=\"token punctuation\">:</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">isMinLength</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">value<span class=\"token punctuation\">:</span> string</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> value<span class=\"token punctuation\">.</span>length <span class=\"token operator\">>=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_lengthToTriggerSearch<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">private</span> <span class=\"token keyword\">get</span> <span class=\"token function\">validators</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> ValidatorFn<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span>Validators<span class=\"token punctuation\">.</span>required<span class=\"token punctuation\">,</span> containsIdValidation<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>I wrote code to be self-explanatory and I hope you understand it.\nEven though, here are some key takeaways:</p>\n<ol>\n<li>On line <strong>55</strong> the interface <code class=\"language-text\">ControlValueAccessor</code> is declared to be implemented by the component.</li>\n<li>On line <strong>72</strong> the component constructor gets the instance of a <code class=\"language-text\">NgControl</code>. This means you can use <code class=\"language-text\">ngModel</code>\nor a <code class=\"language-text\">[formControl]</code> | <code class=\"language-text\">formControlName</code>, template driven or reactive form respectively.</li>\n<li>On line <strong>94</strong> <code class=\"language-text\">ngOnChanges</code> turn off <code class=\"language-text\">isSearching</code> state if the component receives options to display.\n<code class=\"language-text\">isSearching</code> state is triggered when the user types a string with a length greater/equals than 3 characters (default).</li>\n<li>\n<p>On line <strong>120</strong> the <code class=\"language-text\">inputControl</code> object (which is a <code class=\"language-text\">FormControl</code> and receives updates from the input text)\ncommunicates with the <code class=\"language-text\">NgControl</code> instance mentioned before. The following cases use cases are handled here:</p>\n<ol>\n<li>When the user types the value is a <code class=\"language-text\">string</code> and after length validation the value is passed\n(what to do with the text? the component does not know, he does not care). Outside the component\nyou have to react to this value, fetch, and filter the values. Since this options are received as\na component input then they will be rendered.</li>\n<li>When the component renders some options to click and the user chooses one then the value is passed\nto the outer <code class=\"language-text\">NgControl</code> instance. The value selected will remain unless the user cleans or removes\na character (that action will make the component to emit a <code class=\"language-text\">string</code> value which then will provide\noptions to select).</li>\n</ol>\n</li>\n</ol>\n<p>Observe it is not necessary to provide explicitly <code class=\"language-text\">NG_VALUE_ACCESSOR</code> dependency in the component and it is because <code class=\"language-text\">NgControl</code> dependency is declared (it is optional to avoid an error if is not present). The <code class=\"language-text\">NgControl</code> dependency connects the <code class=\"language-text\">ngModel</code> or <code class=\"language-text\">FormControl</code> directive you declare when using the component to the inner <code class=\"language-text\">FormControl</code> previously described which means this component will work with Angular Template Driven and Reactive Forms, but I encourage you to use the later one. Reactive forms seems to be a bit more complex conceptually speaking but are <a href=\"https://angular.io/guide/reactive-forms#introduction-to-reactive-forms\">more predictable</a>.</p>\n<h2>Component’s Usage</h2>\n<p>Now, it is time show how to use the component. Do not forget to import the <code class=\"language-text\">InputAutocompleteModule</code> in your main module.</p>\n<h4>Template</h4>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre style=\"counter-reset: linenumber 0\" class=\"language-html line-numbers\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>form</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>example-form<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">[formGroup]</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>form<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">(ngSubmit)</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>submit()<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input-autocomplete</span>\n    <span class=\"token attr-name\">formControlName</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>pokemon<span class=\"token punctuation\">\"</span></span>\n    <span class=\"token attr-name\">placeholder</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>Pokemon's name<span class=\"token punctuation\">\"</span></span>\n    <span class=\"token attr-name\">[options]</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>pokemons$ | async<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>input-autocomplete</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input-autocomplete</span>\n    <span class=\"token attr-name\">formControlName</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>swCharacter<span class=\"token punctuation\">\"</span></span>\n    <span class=\"token attr-name\">placeholder</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>SW character's name<span class=\"token punctuation\">\"</span></span>\n    <span class=\"token attr-name\">lengthToTriggerSearch</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>2<span class=\"token punctuation\">\"</span></span>\n    <span class=\"token attr-name\">[options]</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>swCharacters$ | async<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>input-autocomplete</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">mat-raised-button</span> <span class=\"token attr-name\">color</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>primary<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>submit<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>form</span><span class=\"token punctuation\">></span></span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h4>Controller</h4>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre style=\"counter-reset: linenumber 0\" class=\"language-javascript line-numbers\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Component<span class=\"token punctuation\">,</span> OnInit <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@angular/core\"</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> FormControl<span class=\"token punctuation\">,</span> FormGroup <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@angular/forms\"</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">of</span> <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"rxjs\"</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> map<span class=\"token punctuation\">,</span> startWith<span class=\"token punctuation\">,</span> delay<span class=\"token punctuation\">,</span> switchMap <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"rxjs/operators\"</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Identifiable <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"./input-autocomplete\"</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> pokemons<span class=\"token punctuation\">,</span> swCharacters <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"./data\"</span>\n\n<span class=\"token comment\">/**\n * @title Filter autocomplete\n */</span>\n@<span class=\"token function\">Component</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  selector<span class=\"token punctuation\">:</span> <span class=\"token string\">\"autocomplete-filter-example\"</span><span class=\"token punctuation\">,</span>\n  templateUrl<span class=\"token punctuation\">:</span> <span class=\"token string\">\"autocomplete-filter-example.html\"</span><span class=\"token punctuation\">,</span>\n  styleUrls<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"autocomplete-filter-example.css\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AutocompleteFilterExample</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">OnInit</span> <span class=\"token punctuation\">{</span>\n  form <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">FormGroup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    pokemon<span class=\"token punctuation\">:</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">FormControl</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    swCharacter<span class=\"token punctuation\">:</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">FormControl</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n  pokemons$ <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>form<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"pokemon\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>valueChanges<span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span>\n    <span class=\"token function\">startWith</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">switchMap</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">name</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> name <span class=\"token operator\">===</span> <span class=\"token string\">\"string\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">of</span><span class=\"token punctuation\">(</span>pokemons<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span>\n          <span class=\"token function\">delay</span><span class=\"token punctuation\">(</span><span class=\"token number\">800</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n          <span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">response</span> <span class=\"token operator\">=></span>\n            response<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">p</span> <span class=\"token operator\">=></span> p<span class=\"token punctuation\">.</span>label<span class=\"token punctuation\">.</span><span class=\"token function\">toUpperCase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">includes</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n          <span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">}</span>\n      <span class=\"token keyword\">return</span> <span class=\"token keyword\">of</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">)</span>\n\n  swCharacters$ <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>form<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"swCharacter\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>valueChanges<span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span>\n    <span class=\"token function\">startWith</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">switchMap</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">name</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> name <span class=\"token operator\">===</span> <span class=\"token string\">\"string\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">of</span><span class=\"token punctuation\">(</span>swCharacters<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span>\n          <span class=\"token function\">delay</span><span class=\"token punctuation\">(</span><span class=\"token number\">800</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n          <span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">response</span> <span class=\"token operator\">=></span>\n            response<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">p</span> <span class=\"token operator\">=></span> p<span class=\"token punctuation\">.</span>label<span class=\"token punctuation\">.</span><span class=\"token function\">toUpperCase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">includes</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n          <span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">}</span>\n      <span class=\"token keyword\">return</span> <span class=\"token keyword\">of</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">)</span>\n\n  <span class=\"token function\">ngOnInit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">submit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>form<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<blockquote>\n<p>I hope you liked it.</p>\n</blockquote>","frontmatter":{"title":"Reusable Angular Material Input Autocomplete form control","date":"December 22, 2019","description":"In this example I will use an Angular Material Autocomplete form control and show how to implement <strong>@angular/forms ControlValueAccessor</strong> interface to build a reusable form control. The form control will display a message (like an option) while it waits for results and a message when no results were found."}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/angular-material-reusable-autocomplete/","previous":{"fields":{"slug":"/whatever-js/"},"frontmatter":{"title":"What is this Blog about?"}},"next":{"fields":{"slug":"/templateref-projection-with-context-inside-component/"},"frontmatter":{"title":"TemplateRef projection with Context in an Angular Component"}}}}}