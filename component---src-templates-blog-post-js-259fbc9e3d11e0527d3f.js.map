{"version":3,"sources":["webpack:///./src/components/bio.js","webpack:///./src/templates/blog-post.js"],"names":["Bio","useStaticQuery","site","siteMetadata","author","social","style","marginBottom","rhythm","textAlign","display","href","linkedIn","BlogPostTemplate","render","post","this","props","data","markdownRemark","siteTitle","title","pageContext","previous","next","location","frontmatter","description","excerpt","marginTop","scale","date","fields","readingTime","text","dangerouslySetInnerHTML","__html","html","flexWrap","justifyContent","listStyle","padding","marginLeft","to","slug","rel","React","Component","pageQuery"],"mappings":"6FAAA,iDAgDeA,IApCH,WACV,IADgB,EACHC,yBAAe,aAaIC,KAAKC,aAA7BC,EAdQ,EAcRA,OAAQC,EAdA,EAcAA,OAChB,OACE,yBACEC,MAAO,CACLC,aAAcC,YAAO,OAGvB,yCACa,gCAASJ,GADtB,8IAIE,uBACEE,MAAO,CAAEG,UAAU,QAAUC,QAAQ,SACrCC,KAAI,+BAAiCN,EAAOO,UAF9C,uC,oLC7BFC,E,kGACJC,OAAA,WACE,IAAMC,EAAOC,KAAKC,MAAMC,KAAKC,eACvBC,EAAYJ,KAAKC,MAAMC,KAAKhB,KAAKC,aAAakB,MAF7C,EAGoBL,KAAKC,MAAMK,YAA9BC,EAHD,EAGCA,SAAUC,EAHX,EAGWA,KAElB,OACE,kBAAC,IAAD,CAAQC,SAAUT,KAAKC,MAAMQ,SAAUJ,MAAOD,GAC5C,kBAAC,IAAD,CACEC,MAAON,EAAKW,YAAYL,MACxBM,YAAaZ,EAAKW,YAAYC,aAAeZ,EAAKa,UAEpD,iCACE,gCACE,wBACEtB,MAAO,CACLuB,UAAWrB,YAAO,GAClBD,aAAc,IAGfQ,EAAKW,YAAYL,OAEpB,uBACEf,MAAK,iBACAwB,aAAM,IADN,CAEHpB,QAAQ,QACRH,aAAcC,YAAO,MAGtBO,EAAKW,YAAYK,KAPpB,MAO6BhB,EAAKiB,OAAOC,YAAYC,OAGvD,6BAASC,wBAAyB,CAAEC,OAAQrB,EAAKsB,QACjD,wBACE/B,MAAO,CACLC,aAAcC,YAAO,MAGzB,gCACE,kBAAC,IAAD,QAIJ,6BACE,wBACEF,MAAO,CACLI,QAAQ,OACR4B,SAAS,OACTC,eAAe,gBACfC,UAAU,OACVC,QAAS,EACTC,WAAY,IAGd,4BACGnB,GACC,kBAAC,OAAD,CAAMoB,GAAIpB,EAASS,OAAOY,KAAMC,IAAI,QAApC,KACKtB,EAASG,YAAYL,QAI9B,4BACGG,GACC,kBAAC,OAAD,CAAMmB,GAAInB,EAAKQ,OAAOY,KAAMC,IAAI,QAC7BrB,EAAKE,YAAYL,MADpB,W,GA/DeyB,IAAMC,WA2EtBlC,YAER,IAAMmC,EAAS","file":"component---src-templates-blog-post-js-259fbc9e3d11e0527d3f.js","sourcesContent":["/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport { rhythm } from \"../utils/typography\"\n\nconst Bio = () => {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      site {\n        siteMetadata {\n          author\n          social {\n            linkedIn\n          }\n        }\n      }\n    }\n  `)\n\n  const { author, social } = data.site.siteMetadata\n  return (\n    <div\n      style={{\n        marginBottom: rhythm(2.5),\n      }}\n    >\n      <p>\n        Written by <strong>{author}</strong>. A proactive and disciplined Sr.\n        Software Engineer (Full-stack Web Developer) with rock-solid programming\n        skills in Javascript/Typescript.\n        <a\n          style={{ textAlign: `right`, display: `block` }}\n          href={`https://www.linkedin.com/in/${social.linkedIn}`}\n        >\n          Read more about me on LinkedIn.\n        </a>\n      </p>\n    </div>\n  )\n}\n\nexport default Bio\n","import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport { rhythm, scale } from \"../utils/typography\"\n\nclass BlogPostTemplate extends React.Component {\n  render() {\n    const post = this.props.data.markdownRemark\n    const siteTitle = this.props.data.site.siteMetadata.title\n    const { previous, next } = this.props.pageContext\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO\n          title={post.frontmatter.title}\n          description={post.frontmatter.description || post.excerpt}\n        />\n        <article>\n          <header>\n            <h1\n              style={{\n                marginTop: rhythm(1),\n                marginBottom: 0,\n              }}\n            >\n              {post.frontmatter.title}\n            </h1>\n            <p\n              style={{\n                ...scale(-1 / 5),\n                display: `block`,\n                marginBottom: rhythm(1),\n              }}\n            >\n              {post.frontmatter.date} - {post.fields.readingTime.text}\n            </p>\n          </header>\n          <section dangerouslySetInnerHTML={{ __html: post.html }} />\n          <hr\n            style={{\n              marginBottom: rhythm(1),\n            }}\n          />\n          <footer>\n            <Bio />\n          </footer>\n        </article>\n\n        <nav>\n          <ul\n            style={{\n              display: `flex`,\n              flexWrap: `wrap`,\n              justifyContent: `space-between`,\n              listStyle: `none`,\n              padding: 0,\n              marginLeft: 0,\n            }}\n          >\n            <li>\n              {previous && (\n                <Link to={previous.fields.slug} rel=\"prev\">\n                  ← {previous.frontmatter.title}\n                </Link>\n              )}\n            </li>\n            <li>\n              {next && (\n                <Link to={next.fields.slug} rel=\"next\">\n                  {next.frontmatter.title} →\n                </Link>\n              )}\n            </li>\n          </ul>\n        </nav>\n      </Layout>\n    )\n  }\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n      }\n      fields {\n        readingTime {\n          text\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}