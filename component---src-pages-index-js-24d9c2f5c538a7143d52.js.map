{"version":3,"sources":["webpack:///./src/components/bio.js","webpack:///./src/components/post-tile/index.js","webpack:///./src/pages/index.js"],"names":["Bio","useStaticQuery","site","siteMetadata","author","social","style","marginBottom","rhythm","textAlign","display","href","linkedIn","PostTile","post","to","slug","title","date","readingTime","dangerouslySetInnerHTML","__html","description","BlogIndex","render","data","this","props","siteTitle","posts","allMarkdownRemark","edges","location","map","node","key","fields","frontmatter","excerpt","text","React","Component","pageQuery"],"mappings":"6FAAA,iDAgDeA,IApCH,WACV,IADgB,EACHC,yBAAe,aAaIC,KAAKC,aAA7BC,EAdQ,EAcRA,OAAQC,EAdA,EAcAA,OAChB,OACE,yBACEC,MAAO,CACLC,aAAcC,YAAO,OAGvB,yCACa,gCAASJ,GADtB,8IAIE,uBACEE,MAAO,CAAEG,UAAU,QAAUC,QAAQ,SACrCC,KAAI,+BAAiCN,EAAOO,UAF9C,uC,oLCjCO,SAASC,EAAT,GAA6B,IAATC,EAAQ,EAARA,KACjC,OACE,iCACE,gCACE,wBACER,MAAO,CACLC,aAAcC,YAAO,EAAI,KAG3B,kBAAC,OAAD,CAAMO,GAAID,EAAKE,MAAOF,EAAKG,QAE7B,+BAAQH,EAAKI,MARf,MAQgCJ,EAAKK,aAErC,iCACE,uBACEC,wBAAyB,CACvBC,OAAQP,EAAKQ,iB,ICZnBC,E,kGACJC,OAAA,WAAU,IACAC,EAASC,KAAKC,MAAdF,KACFG,EAAYH,EAAKvB,KAAKC,aAAac,MACnCY,EAAQJ,EAAKK,kBAAkBC,MAErC,OACE,kBAAC,IAAD,CAAQC,SAAUN,KAAKC,MAAMK,SAAUf,MAAOW,GAC5C,kBAAC,IAAD,CAAKX,MAAM,cACX,kBAAC,IAAD,MACCY,EAAMI,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACZ,OACE,kBAACrB,EAAD,CACEsB,IAAKD,EAAKE,OAAOpB,KACjBF,KAAM,CACJG,MAAOiB,EAAKG,YAAYpB,OAASiB,EAAKE,OAAOpB,KAC7CA,KAAMkB,EAAKE,OAAOpB,KAClBE,KAAMgB,EAAKG,YAAYnB,KACvBI,YAAaY,EAAKG,YAAYf,aAAeY,EAAKI,QAClDnB,YAAae,EAAKE,OAAOjB,YAAYoB,a,GAnB7BC,IAAMC,WA+BjBC,GAFEnB,YAEO","file":"component---src-pages-index-js-24d9c2f5c538a7143d52.js","sourcesContent":["/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport { rhythm } from \"../utils/typography\"\n\nconst Bio = () => {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      site {\n        siteMetadata {\n          author\n          social {\n            linkedIn\n          }\n        }\n      }\n    }\n  `)\n\n  const { author, social } = data.site.siteMetadata\n  return (\n    <div\n      style={{\n        marginBottom: rhythm(2.5),\n      }}\n    >\n      <p>\n        Written by <strong>{author}</strong>. A proactive and disciplined Sr.\n        Software Engineer (Full-stack Web Developer) with rock-solid programming\n        skills in Javascript/Typescript.\n        <a\n          style={{ textAlign: `right`, display: `block` }}\n          href={`https://www.linkedin.com/in/${social.linkedIn}`}\n        >\n          Read more about me on LinkedIn.\n        </a>\n      </p>\n    </div>\n  )\n}\n\nexport default Bio\n","import React from \"react\"\nimport { rhythm } from \"../../utils/typography\"\nimport { Link } from \"gatsby\"\n\nexport default function PostTile({ post }) {\n  return (\n    <article>\n      <header>\n        <h3\n          style={{\n            marginBottom: rhythm(1 / 4),\n          }}\n        >\n          <Link to={post.slug}>{post.title}</Link>\n        </h3>\n        <small>{post.date}</small> - {post.readingTime}\n      </header>\n      <section>\n        <p\n          dangerouslySetInnerHTML={{\n            __html: post.description,\n          }}\n        />\n      </section>\n    </article>\n  )\n}\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport PostTile from \"../components/post-tile\"\n\nclass BlogIndex extends React.Component {\n  render() {\n    const { data } = this.props\n    const siteTitle = data.site.siteMetadata.title\n    const posts = data.allMarkdownRemark.edges\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO title=\"All posts\" />\n        <Bio />\n        {posts.map(({ node }) => {\n          return (\n            <PostTile\n              key={node.fields.slug}\n              post={{\n                title: node.frontmatter.title || node.fields.slug,\n                slug: node.fields.slug,\n                date: node.frontmatter.date,\n                description: node.frontmatter.description || node.excerpt,\n                readingTime: node.fields.readingTime.text,\n              }}\n            />\n          )\n        })}\n      </Layout>\n    )\n  }\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n            readingTime {\n              text\n            }\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            description\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}